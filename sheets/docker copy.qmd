---
title : Creation et utilisation d'un docker (exemple pour pyferret)
---

Si vous êtes à la fac de Toulon, pour passer le proxy, il faut utiliser le wifi univtoulon et indiquer un [serveur mandataire dans les paramètres réseaux](https://phoenixnap.com/kb/ubuntu-proxy-settings) .

Quelques docs à lire : 
- https://medium.com/@anshita.bhasin/a-step-by-step-guide-to-create-dockerfile-9e3744d38d11
- https://leimao.github.io/blog/Docker-Container-GUI-Display/
- 

# 1. Installation de Docker

Pour installer Docker, il faut suivre les instructions du site officiel: [Docker](https://docs.docker.com/get-docker/):

## 1.1 Ubuntu
Se référer à la page web [pour ubuntu](https://docs.docker.com/engine/install/ubuntu/)

### Via un proxy par authentification (cas de Toulon) 

On installe les paquets nécessaires, en remplacant yourlogin par votre login:
```bash
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl --proxy http://cache.univ-tln.fr:3128 --proxy-user yourlogin -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
```
### de manière standard

On installe les paquets nécessaires:
```bash
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
```

### suite de l'installation (avec ou sans proxy) 

```bash
echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
sudo apt update
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
```

En suivant les [explications du site Docker](https://docs.docker.com/engine/install/linux-postinstall/), on ajoute son utilisateur au groupe docker:

```bash
sudo groupadd docker
 sudo usermod -aG docker $USER
```


## 1.2 Mac
Se référer à la page web [pour mac] (https://docs.docker.com/desktop/setup/install/mac-install/)

# 2. Création du docker

Pour notre exemple, le fichier est le suivant: dockerFile_ubuntu22-04_anaconda3
```bash
FROM ubuntu:22.04
WORKDIR /usr/src/app
USER root
RUN apt-get update && apt-get install -y vim libpq-dev wget
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    sh Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 && \
    rm -r Miniconda3-latest-Linux-x86_64.sh
ENV PATH /opt/miniconda3/bin:$PATH
RUN conda update conda
RUN conda config --add channels conda-forge
```

Puis, on construit le docker avec la commande suivante:
```bash
docker build  -t test -f dockerFile_ubuntu22-04_anaconda3 .
```

# 3. lancement du docker 
On lance le docker avec la commande suivante:
```bash
docker run -i -v /home/mazoyer/Documents/data/TBAY/:/DATA -t ubuntu22.4-pyferret bash
```
L'option -v permet de monter un volume entre le docker et le système hôte. Ici, on monte le dossier /home/mazoyer/Documents/data/TBAY/ dans le dossier /DATA du docker.
L'option -t permet de lancer un terminal bash.


# 4. Dockers que je mets à disposition au MIO

## 4.1 Pyferret

## 4.2 OceanParcels

```bash
docker build . -t oceanparcels:3.1.0
```